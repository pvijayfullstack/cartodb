  <% if @visualization.map.provider == 'googlemaps' %>
    <script type="text/javascript" src="//maps.google.com/maps/api/js?sensor=false&v=3.12"></script>
  <% else %>
    <!-- if you are using google maps, uncomment the following line -->
    <!-- <script type="text/javascript" src="//maps.google.com/maps/api/js?sensor=false"></script> -->
  <% end %>

  <script>
    var owner_username = '<%= raw @visualization.user.username %>';
    var vis_id = "<%= @visualization.id %>";
    var vis_name = "<%= @visualization.name %>";
  </script>
  
  <% if !Rails.env.production? %>
    <%= javascript_include_tag 'cdb.js', 'templates', 'map_public' %>
  <% else %>
    <script src="//cartodb-libs.global.ssl.fastly.net/cartodb.js/v3/cartodb.js"></script>
    <%= javascript_include_tag 'templates', 'map_public' %>
  <% end %>

  <script>
    reset_disqus = function() {
      DISQUS.reset({ reload: true });
    };

    if (!window.addEventListener) {
      window.attachEvent('orientationchange', reset_disqus, this);
    } else {
      window.addEventListener('orientationchange', reset_disqus);
    }

    // Get url parameters
    function get_url_params(conversion) {

      conversion = conversion || {};

      var tokens = location.search.slice(1).split('&');
      var params = {};

      for (var i = 0; i < tokens.length; ++i) {

        var tk = tokens[i].split('=');
        var fn = conversion[tk[0]] || function(v) { return v };

        if (tk.length === 2) {
          params[tk[0]] = fn(decodeURIComponent(tk[1]));
        }
      }

      return params;
    }

    // Manage error
    function manageError(err, layer) {
      if(layer && layer.get('type') === 'torque') {
        $('#not_supported_dialog').show();
        // hide all the overlays
        var overlays = vis.getOverlays()
        for (var i = 0; i < overlays.length; ++i) {
          var o = overlays[i];
          o.hide && o.hide();
        }
      }
    }

    // Send stats
    function stats() {
      var browser;
      var ua = navigator.userAgent;
      var checks = [
        ['MSIE 10.0', 'ms10'],
        ['MSIE 9.0', 'ms9'],
        ['MSIE 8.0', 'ms8'],
        ['MSIE 7.0','ms7'],
        ['Chrome', 'chr'],
        ['Firefox', 'ff'],
        ['Safari', 'ff']
      ]
      for(var i = 0; i < checks.length && !browser; ++i) {
        if(ua.indexOf(checks[i][0]) !== -1) browser = checks[i][1];
      }
      browser = browser || 'none';
      cartodb.core.Profiler.metric('cartodb-js.embed.' + browser).inc();
    }

    // When ready...
    $(function() {

      var bool_fn = function(v) { return v == 'true' };
      var is_custom_install = <%= Cartodb.config[:cartodb_com_hosted].present? %>;
      var logo_fn  = function(v) { return ( <%= !@visualization.user.remove_logo? %> || is_custom_install ) ? true : v == 'true' };
      var layer_fn = function(v) {
        if (!v || !v.length) {
          return null;
        }

        return _.map(v.split("|"), function(v) {
          return { visible: !!parseInt(v, 10) }
        });

      };

      var opt = get_url_params({
        'search':       bool_fn,
        'title':        bool_fn,
        'description':  bool_fn,
        'shareable':    bool_fn,
        'fullscreen':   bool_fn,
        'cartodb_logo': bool_fn,
        'scrollwheel':  bool_fn,
        'sublayer_options': layer_fn,
        'layer_selector': bool_fn,
        'legends': bool_fn
      });

      <% if (@visualization.password_protected? or @visualization.organization?) and @protected_map_tokens %>
          opt.auth_token = [];
          <% @protected_map_tokens.each do |token| %>
              opt.auth_token.push('<%= token %>');
          <% end %>
          opt.https = true; // when auth_token is used tiles should be fetch using https
      <% end %>

      <% if Rails.env.development? || Cartodb.config[:no_cdn] == true %>
          opt.no_cdn = true;
      <% end %>

      var scrollwheelEnabled = opt.scrollwheel;

      // Logo MUST be hidden in this view
      opt.cartodb_logo  = false;
      opt.scrollwheel   = false;
      opt.mobile_layout = true;

      cartodb.config.set({
        cartodb_attributions: "",
        cartodb_logo_link: ""
      });

      var loadingTime  = cartodb.core.Profiler.metric('cartodb-js.embed.time_full_loaded').start();
      var visReadyTime = cartodb.core.Profiler.metric('cartodb-js.embed.time_vis_loaded').start();

      var onResize = function() {
        $("#map").css({ height: $(window).height() - 194 }); 
        $("#map").delay(500).animate({ opacity: 1 }, 250); 
      };

      var setupMapDimensions;

      var doOnOrientationChange = function() {

        switch(window.orientation)
        {
          case -90:
            case 90: setupMapDimensions(true, true);
          break;
          default: setupMapDimensions(true, true);
          break;
        }

      };

      $.extend( $.easing, {
        easeInQuad: function (x, t, b, c, d) {
          return c*(t/=d)*t + b;
        }
      })

      setupMapDimensions = function(mobileDevice, animated) {

        var windowHeight = $(window).height();
        var h, height, top;

        if (mobileDevice) {

          if (windowHeight > 670) {
            h = 180;
          } else { // iPhone, etc.
            h = 100;
          }

        } else {
          h = 260;
        }

        height = windowHeight - h;
        top    = windowHeight - (h - 67);

        if (animated) {
          $("#map").animate({ height: height }, { easing: "easeInQuad", duration: 150 }); 
        } else {

          if (mobileDevice) {
            $("#map").css({ height: height, opacity: 1 }); 
          }

          $("#map").trigger("resize");

        }

        window.vis.mapView.invalidateSize()

      };

      cartodb.createVis('map', <%=raw @visualization.to_vizjson.to_json %>, opt, function(vis) {

        visReadyTime.end();

        vis.on('load', function() {
          loadingTime.end();
        });

        window.vis = vis;

        var fullscreen = vis.getOverlay("fullscreen");

        if (fullscreen) {

          fullscreen.options.doc = ".cartodb-public-wrapper";
          fullscreen.model.set("allowWheelOnFullscreen", scrollwheelEnabled);

        }

        // some stats
        stats();

        var mobileDevice = /Android|webOS|iPad|iPhone|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);

        if (!mobileDevice) {
          $(window).on("resize", onResize);
        }

        setupMapDimensions(mobileDevice);

        setTimeout(function() {
          $(window).trigger("map_resized");
        }, 300);

        // recalc map position on orientation change
        if (!window.addEventListener) {
          window.attachEvent('orientationchange', doOnOrientationChange);
        } else {
          window.addEventListener('orientationchange', _.bind(doOnOrientationChange));
        }

      }).on('error', manageError);

      <% if Cartodb.config[:graphite_public] %>
        if (location.protocol.indexOf('https') === -1) {
          jQuery.getScript('<%= javascript_path "statsc.js" %>', function(ready) {
            statsc.connect('http://<%= Cartodb.config[:graphite_public]['host'] %>:<%= Cartodb.config[:graphite_public]['port'] %>/');
            cartodb.core.Profiler.backend(function () {
              statsc.send.apply(statsc, arguments);
            })
            // stop sending stats after 11 seconds
            // statsc send stats in 5 secs interval so allow to send at least twice
            setTimeout(function() {
                cartodb.core.Profiler.backend(null);
            }, 11*1000);
          })
        }
      <% end %>
    });

  </script>

  <%= insert_trackjs() %>

  <%= render partial: 'shared/analytics', locals: { 
    ua:     Cartodb.config[:google_analytics]['primary'],
    domain: Cartodb.config[:google_analytics]['domain'],
    custom_vars: [{title: "Public Pages", value: "Other", num: 3}],
    page_owner: @visualization.user
  } %>