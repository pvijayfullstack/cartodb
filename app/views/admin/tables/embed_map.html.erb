<!DOCTYPE html>
<html lang="en">
  <head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
    <meta http-equiv="content-type" content="text/html; charset=UTF-8"/>
    <link rel="shortcut icon" href="/favicons/favicon.ico" />
    <title><%= @table.name %> | CartoDB</title>
    <meta name="description" content="">
    <meta name="keywords" content="">
    <meta name="author" content="CartoDB">
    <meta name="DC.title" content="<%= @table.description %> | CartoDB">
    
    <meta property="og:title" content="<%= @table.description %> | CartoDB"/>
    <meta property="og:description" content="<%= @table.description %>"/> 
    <meta property="og:type" content="Visualization"/>
    <meta property="og:url" content="<%= request.fullpath %>" />
    <meta property="og:image" content="<%= asset_path "layout/cartofante_blue.png" %>"/>

    <style type="text/css">
      html, body, #map {height: 100%; padding: 0; margin: 0;}
    </style>

    <%= stylesheet_link_tag :leaflet %>
    <%= stylesheet_link_tag 'cdb/themes/css/all.css' %>

    <script id="infowindow_template" type="text/tmpl">
      <%# render :file => File.join(Rails.root,"lib/assets/javascripts/cartodb/" + @infowindow_template_path + ".jst.mustache") %>
    </script>

    <%= render 'shared/analytics' %>
  </head>
  <body >
    <% if @table.public? %>
    <div id="map"></div>
    <% end %>
  </body>

  <% if @table.map.provider == 'googlemaps' %>
    <script type="text/javascript" src="https://maps.google.com/maps/api/js?sensor=false"></script>
  <% end %>
  <%= javascript_include_tag :jquery, :cdb %>

  <script>
    var vizjson= <%=raw map_vizzjson(@table.map, :full => false).to_json %>


    function get_url_params() {
      var tokens = location.search.slice(1).split('&');
      var params = {}
      for(var i = 0; i < tokens.length; ++i) {
        var tk = tokens[i].split('=');
        params[tk[0]] = decodeURIComponent(tk[1]);
      }
      return params;
    }

    function search_overlay(name) {
      for(var i = 0; i < vizjson.overlays.length; ++i) {
        if(vizjson.overlays[i].type === name) {
          return vizjson.overlays[i];
        }
      }
    }

    function remove_overlay(name) {
      for(var i = 0; i < vizjson.overlays.length; ++i) {
        if(vizjson.overlays[i].type === name) {
          vizjson.overlays.splice(i, 1);
          return;
        }
      }
    }

    var opt = get_url_params()

    // remove search if the vizualization does not contain it
    if (opt.search !== 'true') {
      remove_overlay('search');
    }


    if(opt.title !== 'true' && opt.description !== 'true' && opt.shareable !== 'true') {
      remove_overlay('header');
    }

    if(opt.title !== 'true') {
      vizjson.title = null;
    }

    if(opt.description !== 'true') {
      vizjson.description = null;
    }

    if(opt.shareable !== 'true') {
      var s = search_overlay('header');
      if(s) {
        s.shareable = false;
      }
    }

    if(opt.sw_lat !== undefined) {
      vizjson.bounds = [
        [opt.sw_lat, opt.sw_lon],
        [opt.ne_lat, opt.ne_lon],
      ];
    }

    if(opt.sql) {
      vizjson.layers[1].options.query = opt.sql;
    }

    var vis = new cdb.vis.Vis({el: $('#map')});
    vis.load(vizjson);
  </script>
</html>
